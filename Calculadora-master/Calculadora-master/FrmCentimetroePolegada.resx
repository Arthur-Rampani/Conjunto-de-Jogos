<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAB/DAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAw5SURBVHja7d1drB1VHYbxKVKgLSBQsNJS0gpRgwT5UIsRoXeYgCZqEPROY8JHNHID
        cmHUGA0fmmBEjEhQbgRaigixgKIxUcGPaEjBoyhEFKEYSoDY2oqlp/6Xe3bSgD3d55xZe2bP+j3Jewsz
        0/O8a82aPWuqCgAAAAAAAAAAAAAAAAAAAACAsbEosjJycuRtkdWRQ1wWoN8cHDkvsj7yeOTZyJbIk5H7
        IhdHlrlMQP9YFbk5si2yey/ZGbk/ssblAvrDcZF7ZhD/lXkkstZlA8qTf5g/KAGgTPmVAFC4/EoAKFx+
        JQAULr8SAAqXXwkAhcuvBIDC5VcCQOHyKwGgcPmVAFC4/EoAKFx+JQAULr8SAAqXXwkAhcuvBIAJlH9a
        CQDdlv/eTPLfGfl6ZEeG//aUEgC6O/LfETkmsjhyZeTfZgJAOfKv3OP/tUQJAGXKrwSAwuVXAkDh8isB
        oHD5lQBQuPxKAChcfiUAFC6/EgAKl18JAIXLrwSAwuVXAkDh8isBoHD5lQBQuPxKAChcfiUAFC6/EgAK
        l18JAIXLrwSAwuVXAkDh8isBkL9w+ZUAyF+4/EoA5C9cfiUA8hcuvxIA+QuXXwmA/IXLrwRA/sLlVwIg
        f+HyKwGQv3D5lQDIX7j8SgDkL1x+JQDyFy6/EgD5Oyjj0sgRkcVKAKVyfOS+TPLfHjmmQ+e6MHJ65AuR
        uyK/jDwQ2RC5InJiZMGYSuCqTCUwFTnLnzW6IP+KDp3rssjVkWdmOOa/RC6LHKoEUMK0/95M8m/o2Mh/
        dGRdZHqEY38pcn19azDJtwNTbgdg2l9VB0W+NstzeDnyzcjhZgIw8k/uyJ84O/L8HM4llcANZgIw8k/m
        yJ9YWEs813MazgTGVQJmAsgqf0kjf+KoyEPzPLc+zQSUgJG/96v9e7I68lQD5zjuEsg1E3gksoYO7vn7
        PvLvee5PN3SufZkJ/CjyOloY+ft4z/9KltVT390TWgI5ZgI7IxdSg/x9nfbvSXoEeEvD596HEtgYOZgi
        5O+z/EMuiGzvQQnsaPD4/xZ5A03I33f5E6+tj3t3hhL41phKIL2sdF012i8ZR8lzkbdThfx9l3/IW6rB
        iz+TWgLpp8wbGjzuLZFT6dIvSl7tH4X0B/+rjCWwNNNxL4/c1uDon/JYZX8GI3/Vn9X+2ZTAryeoBJL8
        6xqWP+XWarBAip7Ib+TvxkzgxgZLYDjyN32c2yIfpI2Rv8/3/JNeAsORP8e/67erwZMFGPmLGvknpQRy
        jfy767+XVdTpx4Jfzj38jinkOp5S5Xs6cFPkyFkez9EZ5b+vHjRAfrv3jqEEdtXT7SNnKf80+UH+skqA
        /CB/oSWwnPwgfxklcBT5QX4lQH6Qv8OcnLEEbqr/+7eSH/uS33P+/s0E/hN5oho8KiQ/jPwdnwk8mOnf
        gfwg/4SUwAPkB/nL5aTIL8gP8isB8oP8SoD8IL8SID/IrwTID/IrAfKD/GNk/4JKgPw9wQaec+fAarCf
        /aWRa6vBxzmuiXw88qbIfi0c01vHUALkJ3/Re/glTqgGO+8+U736N/Tpe3ePRz5fDb4HOG7OjjxPfpA/
        D2dEfjfCdUjFcNeYhUlv9aUXe/y2H+TPwJsjv+2oODl37yV/j+T3Vt/cOCDyjY4K5H1+7BOv9M6PkyNP
        dVCknFt3k9+0v/jV/iEXVYNNNLokVK7PdZG/ZyO/ffvnz5UdE2u44Gfkh2n/GLi2Q4LZuhsW/MbM5zoi
        mgU/kL8Fzo/saFk4C34w7W+J9E7DphbFIz9GGvmt9ufj0mqwk26OL+Uevw/5rfbDyN8yh0VuziTi3krA
        V3oxkvxe6R0PSchxfUhjnP8vkJ/8HSmB9G/6evJjlHv+kqb96ff46RXb9L59eiU3vXi0pMUSyDU1/0nk
        bvKjzQW/Lr3VtyhyTuQ7kalq8B7+P6rBe/d3Rj4WWdrCceV8A889P8hfS3Z95MUZjvmlyMbIqS0cX7pW
        68kP8jfPslnK9VDkXS2VwDryY9IX/Lp0z5822bxyDvfBD1eDXXvamKncRn5M6sjftQW/d0Q2z/F8NrU0
        E1jesdsB8vdI/tJ+5PPZeZ7Xwy2WwDryo8lpf2nyL65vSeZ7fptauh0YrglMkx9G/tlzeORnDZ1nmzOB
        9eSHBb/Zc1jkpw2eb1sLgyvq9RXyw7R/FqSv7ny34fPe1HIJTJMfo077vdJbVZ/KIE2bTwfuJj/c84/O
        GyN/zHAd2lgTSO8NfJ/8aHPkn8Qv9lwS2Z7heoxzJmAzDxj550h6HHhVNfitf46ZwBljkN8Gntjngp99
        +/fOIZEvT2AJDPcMMO1Ha/L3ZTOPgyesBOzkA/IXWgLkB/kz3g58pcMlQH6Qv9ASID/IX2gJkB/kL7QE
        yA/yF1oC5Af5Cy0B8oP8hZYA+UH+QkuA/CB/gSWQXiB6fzXYp4D8mFF+L/b0swT+GdlFfhj5yy0B8oP8
        SoD8IL8SID/5ya8EyE9+8isB8pOf/EqA/OQnvxIgP/nJrwTIT37yD1hQDbb2OrwW8TUFlAD5e4Iv9syd
        QyPnRq6N/KAafPgzFen1kfMiR7RYAtszyn8v+cnf1492jMpp9exm617OPwn4w8jaFo7thMifM8p/HHX6
        Me332/65cWbkkRGvxV/r2cC4GH60Y1dl5Idpf5Zr95tZXpOnx1QCaca13rQfRv48pMW9q+d4bVIJnF8N
        FgxzjfzryA8jfz5WR/40j2uUSuBDGUpgeeaR3z1/T+Q38s+P90W2zfNaNT0TMPJjpGm/D3XOn4siLzdw
        zTZHLmhwwc9zfrjnHwOfqJrbNuvpugQWzEN+Iz9M+8dIEnZHg9dwc307MFtW1PJPkx9G/vFxUj1yN3kt
        ZzsTyD3yW/Drychvtb95DqoGu+c2fU03j7gwaLUfpv0t8+7IU5lKYKaZwAr3/Gh75F/hElf7RS6MvDjG
        EjDyY6R7fo/6xsPCavBE4IVMJfDhPUrAoz60Lr/NPF7N/nUJ5JwJHFvLb7Ufe2VVxnv+Li74pffdT4y8
        pxp80mptfQ0WtjQT+GSmEkhPBx6s8r3VZ9rfA9IuNDcXcs+/JPKRyMZ6hEyfs/pXLd9jkRsip1f5XrZp
        owTc82NG0ium26r+r/an++Aba+FnOu4nIxdHDmhpTeBF8mNcLKryrAx3bdq/NHLLLI4/zQwua6EE9u/4
        TID8PSMtzD3e82l/ms5fUc3+BZytdQkc6HaA/H3llMizDf6RfK/q3nP+tEr96BzPJ5XA5S3NBLp0O2C1
        v6ekTSm3NPRHklaar4ss7tg5fjSycx7nNSyBNmYCuX4nYOTH/1hdL3o19ceS3nL7UjVYbe8K1zRwXltb
        XBNocyZA/p6Tnoc3/bPfLpVAEujGhs6r7RJ4gfzIwcXznCJ3uQQW1Lclu5UA+fH/WRa5P8MfUVdK4PKG
        z6vtEnie/GiaNdXoH6mYSwm0uTB4RuS5npRA2lL8MxlmbORHdVbk9z2cCaTyybEBRxtPB4av9E6TH7lK
        YKqHM4H0uPPRTCUwrpnACvKjDzOBtkrgnMgTEzoTsIcfxsqZPS2BczOVQHqZ6tOZSiDn7r0284AS6HAJ
        5PxQJ/mhBDpcAkn+28kPJVBeCZAfSqDQEiA/lEChJUB+KIFCS4D8UAKFlgD5MVGcpQQaKwHyQwkUWgLk
        hxLYSwl8scclcAD50acSmOphCby3yvfuQJrhbKjy/baf/DAT6HAJvFwZ+aEEir4dID+UgBIgP5SAEiA/
        lIASID+UgBIgP5SAEiA/lIASID+UgBIgP5RAuSVAfvSiBKaUgJ/3olzW9rAEVkZ+nlF++/bD7UBHS2D4
        Vt8u036grBLwSi9QaAmQHyi0BMgPFFoC5AcKLYGc8nvUByXQ4RIgP1BoCeSW33N+oKMlQH6g0BIgP1Bo
        CZAfKLQEyA8UWgLkBzpaAjnfIlwUWU5+oLuszVQC2yNfjdyRSf57yA90eyawqzLyA0WXAPkBJUB+QAmQ
        H1AC5AeUAPkBJUB+QAmQH1AC5AfKLQHyA4WWAPmBQkuA/EChJUB+oNASID9QaAmQHyi0BMgP9IS1syyB
        jeQH+sU7Iz+O7JxB/K2RmyLHulxA/1gWuaQafJDz75HnIlsij0VujXwgssRlAvrNIfUUf03ktMjKyEEu
        CwAAAAAAAAAAAAAAAAAAAABgTPwX5mOcJhocD8YAAAAASUVORK5CYII=
</value>
  </data>
</root>